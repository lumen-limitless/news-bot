name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: rss-bot
            asset_name: rss-bot-linux-amd64

          - os: windows-latest
            artifact_name: rss-bot.exe
            asset_name: rss-bot-windows-amd64.exe

          - os: ubuntu-latest
            artifact_name: rss-bot
            asset_name: rss-bot-raspbian-arm
            target: arm-unknown-linux-gnueabihf

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - uses: taiki-e/install-action@cross

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build
        run: |
          if [ "${{ matrix.target }}" == "arm-unknown-linux-gnueabihf" ]; then
            cross build --release --target=${{ matrix.target }}
          else
            cargo build --release
          fi

      - name: Generate checksum
        run: |
          if [ "${{ matrix.target }}" ]; then
            cd target/${{ matrix.target }}/release
          else
            cd target/release
          fi
          sha256sum ${{ matrix.artifact_name }} > ${{ matrix.asset_name }}.sha256

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACCESS_TOKEN }}
          file: ${{ matrix.target && format('target/{0}/release/{1}', matrix.target, matrix.artifact_name) || format('target/release/{0}', matrix.artifact_name) }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}

      - name: Upload checksum to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.ACCESS_TOKEN }}
          file: ${{ matrix.target && format('target/{0}/release/{1}.sha256', matrix.target, matrix.asset_name) || format('target/release/{0}.sha256', matrix.asset_name) }}
          asset_name: ${{ matrix.asset_name }}.sha256
          tag: ${{ github.ref }}
